<local:BasePage x:TypeArguments="core:KeyboardShooterViewModel"
                x:Class="GenAlpha.KeyboardShooterPage"
                  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                  xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
                  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
                  xmlns:local="clr-namespace:GenAlpha"
                  xmlns:core="clr-namespace:GenAlpha.Core;assembly=GenAlpha.Core"
                  mc:Ignorable="d" 
                  d:DesignHeight="450" d:DesignWidth="800"
                  Title="KeyboardShooterPage"
                d:DataContext="{x:Static core:KeyboardShooterDesignModel.Instance}">

    <!--Page layout definition-->
    <Grid Background="{StaticResource VeryDarkBlueBrush}"
          ClipToBounds="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <local:TopBarControl DataContext="{Binding TopBar}" />

        <!--Main Content-->
        <Grid Grid.Row="1"
              x:Name="CanvasContainer">
            <Canvas Height="{Binding ElementName=CanvasContainer, Path=ActualHeight}"
                    Width="{Binding ElementName=CanvasContainer, Path=ActualWidth}"
                    Focusable="true"
                    local:SpawnItem.Value="{Binding FallingTextItemSpawned}"
                    local:ItemsMoved.Value="{Binding MoveItems}"
                    local:TextObjects.Value="{Binding FallingTexts}"
                    local:BulletObjects.Value="{Binding Bullets}"
                    local:KeyboardInput.Value="{Binding KeyboardInputCommand}"
                    local:ActualHeightProperty.Value="{Binding CanvasHeight, Mode=TwoWay}"
                    local:ActualWidthProperty.Value="{Binding CanvasWidth, Mode=TwoWay}">

                <Line X1="0" X2="{Binding CanvasWidth}"
                      Stroke="{StaticResource RedBrush}"
                      StrokeThickness="1"
                      Canvas.Bottom="{Binding TankWidth}"/>
                <Image Source="../Resources/Images/tank.png"
                       Width="{Binding TankWidth}"
                       Canvas.Bottom="0"
                       Canvas.Left="{Binding TankPosition}">
                    <Image.InputBindings>
                        <MouseBinding Gesture="LeftClick"
                                      Command="{Binding AddItemToCanvasCommand}"/>
                    </Image.InputBindings>
                </Image>
            </Canvas>

            <TextBlock Text="Click Tank to start" 
                       FontSize="{StaticResource FontSizeXLarge}"
                       Visibility="{Binding GameNotStarted, Converter={local:BoolToVisibilityValueConverter}}"/>
            <TextBlock Text="Click Tank to continue" 
                       FontSize="{StaticResource FontSizeXLarge}"
                       Visibility="{Binding GamePaused, Converter={local:BoolToVisibilityValueConverter}}"/>
        </Grid>

        <!--The game over grid layout-->
        <Grid Grid.Row="1"
                Visibility="{Binding GameOver, Converter={local:BoolToVisibilityValueConverter}}">
            <!--Winner and score-->
            <TextBlock VerticalAlignment="Top"
                        TextAlignment="Center"
                       Margin="100 25"
                       FontFamily="{StaticResource LatoBold}"
                       Foreground="{StaticResource GoldBrush}"
                       FontSize="{StaticResource FontSizeXXLarge}">
                <Run Text="Game Over" />
                <LineBreak />
                <Run Text="Score: "/>
                <Run Text="{Binding TopBar.Score}"/>
            </TextBlock>

            <!--Replay game button, only visible when game over-->
            <Button Style="{StaticResource RestartButton}"
                Content="{StaticResource FontAwesomeRotateLeft}"
                Command="{Binding RestartGameCommand}"/>
            
        </Grid>

        <Border Grid.Row="1" 
                Background="{StaticResource GrayBlueBrush}"
                Opacity="0.5"
                Visibility="{Binding SideMenu.ShowSideMenu, Converter={local:BoolToVisibilityValueConverter}}"/>

        <!--Side Menu/Game settings menu-->
        <local:SideMenuControl Grid.Row="1" 
                               HorizontalAlignment="Right"
                               MinWidth="300"
                               local:AnimateSlideInFromRightProperty.Value="{Binding ShowSideMenu}"
                               DataContext="{Binding SideMenu}" 
                               />
    </Grid>
</local:BasePage>
